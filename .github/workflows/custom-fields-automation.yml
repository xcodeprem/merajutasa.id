name: Custom Fields Project Automation

on:
  pull_request:
    types: [opened, synchronize, labeled, unlabeled, ready_for_review, reopened, closed, edited]
  issue_comment:
    types: [created]
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'PR number to process (optional)'
        required: false
        type: string
      dry_run:
        description: 'Dry run mode (no actual changes)'
        required: false
        type: boolean
        default: false

permissions:
  contents: read
  issues: write
  pull-requests: write

jobs:
  custom-fields-automation:
    name: Custom Fields Integration
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci --ignore-scripts
        
      - name: Determine PR context
        id: context
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "pr_number=${{ inputs.pr_number }}" >> $GITHUB_OUTPUT
            echo "dry_run=${{ inputs.dry_run }}" >> $GITHUB_OUTPUT
          elif [[ "${{ github.event_name }}" == "pull_request" ]]; then
            echo "pr_number=${{ github.event.pull_request.number }}" >> $GITHUB_OUTPUT
            echo "dry_run=false" >> $GITHUB_OUTPUT
          elif [[ "${{ github.event_name }}" == "issue_comment" && "${{ github.event.issue.pull_request }}" ]]; then
            if [[ "${{ github.event.comment.body }}" =~ \+project.*custom ]]; then
              echo "pr_number=${{ github.event.issue.number }}" >> $GITHUB_OUTPUT
              echo "dry_run=false" >> $GITHUB_OUTPUT
            else
              echo "trigger=false" >> $GITHUB_OUTPUT
            fi
          else
            echo "trigger=false" >> $GITHUB_OUTPUT
          fi
          
      - name: Run Custom Fields Automation
        if: ${{ steps.context.outputs.trigger != 'false' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_PROJECT_TOKEN: ${{ secrets.GH_PROJECT_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_REPOSITORY_OWNER: ${{ github.repository_owner }}
        shell: bash
        run: |
          PR_ARG=""
          DRY_RUN_ARG=""

          # Only set PR_ARG if this is a PR event, a comment on a PR, or workflow input provided
          if [[ "${{ github.event_name }}" == "pull_request" || "${{ github.event_name }}" == "pull_request_target" ]]; then
            PR_ARG="${{ github.event.pull_request.number }}"
          elif [[ "${{ github.event_name }}" == "issue_comment" && ${{ github.event.issue.pull_request != null && 'true' || 'false' }} == 'true' ]]; then
            PR_ARG="$(jq -r '.issue.number' "$GITHUB_EVENT_PATH")"
          elif [[ -n "${{ inputs.pr_number }}" ]]; then
            PR_ARG="${{ inputs.pr_number }}"
          fi

          if [[ "${{ inputs.dry_run }}" == "true" || "${{ steps.context.outputs.dry_run }}" == "true" ]]; then
            DRY_RUN_ARG="--dry-run"
          fi

          echo "ðŸš€ Starting Custom Fields automation..."
          echo "Project: Custom Fields Projects (#10)"
          echo "PR: ${PR_ARG:-all open PRs}"
          echo "Dry run: $([[ "$DRY_RUN_ARG" == "--dry-run" ]] && echo true || echo false)"
          echo ""

          # Only pass PR_ARG if non-empty
          node tools/github/personal-projects-automation.js custom-fields ${PR_ARG:+$PR_ARG} $DRY_RUN_ARG
          
      - name: Comment on PR with results
        if: ${{ steps.context.outputs.pr_number && github.event_name == 'issue_comment' }}
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            
            try {
              const reportPath = 'artifacts/personal-project-automation-custom-fields.json';
              if (fs.existsSync(reportPath)) {
                const report = JSON.parse(fs.readFileSync(reportPath, 'utf8'));
                
                const changesList = report.results.map(r => {
                  if (r.success && r.actions.length > 0) {
                    return '- **PR #' + r.pr_number + '**: ' + r.actions.join(', ');
                  }
                  return '- **PR #' + r.pr_number + '**: ' + r.errors.join(', ');
                }).join('\n');

                const comment = [
                  '## ðŸŽ¯ Custom Fields Project Integration',
                  '',
                  '**Project:** Custom Fields Projects (#10)',
                  `**Timestamp:** ${report.timestamp}`,
                  '',
                  '### Results',
                  `- **Total PRs processed:** ${report.summary.total_processed}`,
                  `- **Successful:** ${report.summary.successful}  `,
                  `- **Failed:** ${report.summary.failed}`,
                  '',
                  '### Applied Changes',
                  changesList,
                  '',
                  '*Automation triggered by comment "+project custom"*'
                ].join('\n');

                const issueNumber = parseInt(process.env.PR_NUMBER || '${{ steps.context.outputs.pr_number }}', 10);
                await github.rest.issues.createComment({
                  issue_number: issueNumber,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body: comment
                });
              }
            } catch (error) {
              console.error('Failed to post comment:', error);
            }
            
      - name: Upload automation report
        uses: actions/upload-artifact@v4
        with:
          name: custom-fields-automation-report
          path: artifacts/personal-project-automation-custom-fields.json
          retention-days: 30
          
      - name: Summary
        run: |
          echo "## ðŸŽ¯ Custom Fields Automation Summary" >> $GITHUB_STEP_SUMMARY
          
          if [[ -f "artifacts/personal-project-automation-custom-fields.json" ]]; then
            REPORT=$(cat artifacts/personal-project-automation-custom-fields.json)
            TOTAL=$(echo "$REPORT" | jq -r '.summary.total_processed')
            SUCCESS=$(echo "$REPORT" | jq -r '.summary.successful') 
            FAILED=$(echo "$REPORT" | jq -r '.summary.failed')
            
            echo "- **Project:** Custom Fields Projects (#10)" >> $GITHUB_STEP_SUMMARY
            echo "- **Total PRs:** $TOTAL" >> $GITHUB_STEP_SUMMARY
            echo "- **Successful:** $SUCCESS" >> $GITHUB_STEP_SUMMARY
            echo "- **Failed:** $FAILED" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### Field Mappings Applied" >> $GITHUB_STEP_SUMMARY
            echo "- Status, Priority, Size, Category" >> $GITHUB_STEP_SUMMARY
            echo "- Notes, Estimate, Progress" >> $GITHUB_STEP_SUMMARY
            echo "- Start Date, Due Date, Iteration" >> $GITHUB_STEP_SUMMARY
          else
            echo "- No automation report generated" >> $GITHUB_STEP_SUMMARY
          fi