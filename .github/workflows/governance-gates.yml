name: Governance Gates Integration

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  pull_request_target:
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: write

concurrency:
  group: governance-gates-${{ github.ref }}
  cancel-in-progress: true

jobs:
  governance-gates:
    # Run for:
    # - push (always)
    # - pull_request (except Dependabot)
    # - pull_request_target (Dependabot only)
    if: >
      ${{
        github.event_name == 'push' ||
        (github.event_name == 'pull_request' && github.actor != 'dependabot[bot]') ||
        (github.event_name == 'pull_request_target' && github.actor == 'dependabot[bot]')
      }}
    runs-on: ubuntu-latest
    timeout-minutes: 25
    steps:
      - name: Checkout (PR/Push)
        if: ${{ github.event_name != 'pull_request_target' }}
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          fetch-depth: 0

      - name: Checkout base for Dependabot (PR Target)
        if: ${{ github.event_name == 'pull_request_target' }}
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          ref: ${{ github.base_ref }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@1e60f620b9541d16bece96c5465dc8ee9832be0b # v4.0.3
        with:
          node-version: '24'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci
        env:
          PUPPETEER_SKIP_DOWNLOAD: 'true'

      # Core Governance Verification
      - name: Run Governance Verify
        run: npm run governance:verify

      # Spec Hash & Parameter Integrity
      - name: Spec Hash Verification
        run: npm run spec-hash:verify

      - name: Parameter Integrity Check
        run: npm run param:integrity

      - name: Parameter Lock Verification
        run: npm run param:lock

      # DEC & Disclaimers Linting
      - name: DEC Linting
        run: npm run lint:dec

      - name: Disclaimers Linting
        run: npm run lint:disclaimers

      # Policy & Schema Validation
      - name: Policy Aggregation Verification
        run: npm run policy:aggregation:verify

      - name: Schema Validation
        run: npm run schema:validate

      # Gates 1, 2, 3 Verification (with service resilience)
      - name: Gate 1 Verification (CI-adapted)
        run: |
          # Gate 1 includes service-dependent checks - run with advisory mode in CI
          PERF_ADVISORY=true npm run gate:1 || echo "Gate 1 has service dependencies - checking core governance only"
        continue-on-error: true

      - name: Gate 2 Verification (CI-adapted)  
        run: |
          # Gate 2 includes a11y checks - run with advisory mode in CI
          npm run gate:2 || echo "Gate 2 has accessibility dependencies - checking core governance only"
        continue-on-error: true

      - name: Gate 3 Verification (Advisory)
        run: npm run gate:3 || echo "Gate 3 verification in advisory mode"
        continue-on-error: true

      # Generate Phase Tracker
      - name: Generate Phase Tracker
        run: npm run phase:tracker

      # Snapshot Baseline Artifacts
      - name: Snapshot Artifacts
        run: npm run snapshot:artifacts

      - name: Baseline Snapshot
        run: npm run baseline:snapshot

      # Upload Governance Artifacts for Audit Trail
      - name: Upload Governance Artifacts
        if: always()
        uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874 # v4.4.0
        with:
          name: governance-artifacts-${{ github.run_id }}
          path: |
            artifacts/governance-verify-summary.json
            artifacts/spec-hash-diff.json
            artifacts/spec-hash-summary.json
            artifacts/param-integrity-matrix.json
            artifacts/param-lock-status.json
            artifacts/dec-lint.json
            artifacts/disclaimers-lint.json
            artifacts/policy-aggregation-threshold.json
            artifacts/schema-validation.json
            artifacts/gate1-report.json
            artifacts/gate2-report.json
            artifacts/gate3-report.json
            artifacts/phase-tracker.json
            artifacts/baseline-artifacts-snapshot-*.json
            artifacts/governance-verify-summary.json
          retention-days: 30

      # Additional monitoring artifacts
      - name: Upload Monitoring Artifacts
        if: always()
        uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874 # v4.4.0
        with:
          name: governance-monitoring-${{ github.run_id }}
          path: |
            artifacts/no-silent-drift-report.json
            artifacts/evidence-bundle-status.json
            artifacts/evidence-freshness-report.json
            artifacts/fairness-engine-unit-tests.json
            artifacts/security-patterns-smoke.json
          retention-days: 30

      # Auto-seal README sync if needed (conditional)
      - name: Auto-seal README sync
        if: failure() && contains(github.event.head_commit.message, 'auto-seal')
        run: |
          echo "Checking if auto-seal affected README or similar files..."
          if git diff --name-only HEAD~1 HEAD | grep -E "(README\.md|docs/.*\.md)"; then
            echo "Auto-seal may have updated documentation files"
            npm run spec-hash:auto-seal-readme || echo "No additional README seal needed"
          fi

  # Integration test job for governance pipeline
  governance-integration:
    needs: governance-gates
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Setup Node.js
        uses: actions/setup-node@1e60f620b9541d16bece96c5465dc8ee9832be0b # v4.0.3
        with:
          node-version: '24'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci
        env:
          PUPPETEER_SKIP_DOWNLOAD: 'true'

      - name: Governance Check (Full)
        run: npm run governance:check

      - name: Upload Integration Results
        if: always()
        uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874 # v4.4.0
        with:
          name: governance-integration-${{ github.run_id }}
          path: |
            artifacts/governance-verify-summary.json
            artifacts/validate-policy-report.json
          retention-days: 14