# Kubernetes Deployment for MerajutASA Collector Service
# High-throughput deployment for event collection

apiVersion: apps/v1
kind: Deployment
metadata:
  name: merajutasa-collector
  labels:
    app: merajutasa-collector
    component: event-collector
    tier: backend
    version: v1
spec:
  replicas: 5
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 1
  selector:
    matchLabels:
      app: merajutasa-collector
  template:
    metadata:
      labels:
        app: merajutasa-collector
        component: event-collector
        tier: backend
        version: v1
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "4603"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: merajutasa-collector
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
      containers:
      - name: collector
        image: merajutasa/collector:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 4603
          name: http
          protocol: TCP
        env:
        - name: NODE_ENV
          value: "production"
        - name: COLLECTOR_PORT
          value: "4603"
        - name: COLLECTOR_HOST
          value: "0.0.0.0"
        - name: EVENTS_DATA_DIR
          value: "/app/data"
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: merajutasa-config
              key: log_level
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: merajutasa-config
              key: redis_host
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: merajutasa-config
              key: redis_port
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 4603
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 4603
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: 4603
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
        volumeMounts:
        - name: event-data
          mountPath: /app/data
        - name: schemas
          mountPath: /app/schemas
          readOnly: true
        - name: tmp
          mountPath: /tmp
        - name: logs
          mountPath: /app/logs
      volumes:
      - name: event-data
        persistentVolumeClaim:
          claimName: collector-data-pvc
      - name: schemas
        configMap:
          name: event-schemas
      - name: tmp
        emptyDir: {}
      - name: logs
        emptyDir: {}
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
      - key: "node.kubernetes.io/not-ready"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 300
      - key: "node.kubernetes.io/unreachable"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 300

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: merajutasa-collector
  labels:
    app: merajutasa-collector
    component: event-collector

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: merajutasa-collector-pdb
spec:
  selector:
    matchLabels:
      app: merajutasa-collector
  maxUnavailable: 2

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: collector-data-pvc
  labels:
    app: merajutasa-collector
    component: event-collector
spec:
  accessModes:
  - ReadWriteMany
  storageClassName: nfs-storage
  resources:
    requests:
      storage: 50Gi

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: merajutasa-collector-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: merajutasa-collector
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60