# Kubernetes Services for MerajutASA.id
# Service discovery and load balancing for all components

# Core Services (Phase 1)
---
apiVersion: v1
kind: Service
metadata:
  name: merajutasa-signer
  labels:
    app: merajutasa-signer
    app.kubernetes.io/name: merajutasa-signer
    app.kubernetes.io/part-of: merajutasa
    app.kubernetes.io/component: signing-service
    component: signing-service
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "4601"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
  - port: 4601
    targetPort: 4601
    protocol: TCP
    name: http
  selector:
    app: merajutasa-signer

---
apiVersion: v1
kind: Service
metadata:
  name: merajutasa-chain
  labels:
    app: merajutasa-chain
    app.kubernetes.io/name: merajutasa-chain
    app.kubernetes.io/part-of: merajutasa
    app.kubernetes.io/component: chain-service
    component: chain-service
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "4602"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
  - port: 4602
    targetPort: 4602
    protocol: TCP
    name: http
  selector:
    app: merajutasa-chain

---
apiVersion: v1
kind: Service
metadata:
  name: merajutasa-collector
  labels:
    app: merajutasa-collector
    app.kubernetes.io/name: merajutasa-collector
    app.kubernetes.io/part-of: merajutasa
    app.kubernetes.io/component: event-collector
    component: event-collector
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "4603"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
  - port: 4603
    targetPort: 4603
    protocol: TCP
    name: http
  selector:
    app: merajutasa-collector

# Observability Stack Services (Week 3)
---
apiVersion: v1
kind: Service
metadata:
  name: merajutasa-observability
  labels:
    app: merajutasa-observability
    app.kubernetes.io/name: merajutasa-observability
    app.kubernetes.io/part-of: merajutasa
    app.kubernetes.io/component: observability-system
    component: observability-system
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
  - port: 8080
    targetPort: 8080
    protocol: TCP
    name: http
  selector:
    app: merajutasa-observability

---
apiVersion: v1
kind: Service
metadata:
  name: merajutasa-metrics
  labels:
    app: merajutasa-metrics
    app.kubernetes.io/name: merajutasa-metrics
    app.kubernetes.io/part-of: merajutasa
    app.kubernetes.io/component: metrics-collector
    component: metrics-collector
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8081"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
  - port: 8081
    targetPort: 8081
    protocol: TCP
    name: http
  selector:
    app: merajutasa-metrics

---
apiVersion: v1
kind: Service
metadata:
  name: merajutasa-tracing
  labels:
    app: merajutasa-tracing
    app.kubernetes.io/name: merajutasa-tracing
    app.kubernetes.io/part-of: merajutasa
    app.kubernetes.io/component: distributed-tracing
    component: distributed-tracing
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8082"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
  - port: 8082
    targetPort: 8082
    protocol: TCP
    name: http
  selector:
    app: merajutasa-tracing

---
apiVersion: v1
kind: Service
metadata:
  name: merajutasa-logs
  labels:
    app: merajutasa-logs
    app.kubernetes.io/name: merajutasa-logs
    app.kubernetes.io/part-of: merajutasa
    app.kubernetes.io/component: log-aggregation
    component: log-aggregation
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8083"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
  - port: 8083
    targetPort: 8083
    protocol: TCP
    name: http
  selector:
    app: merajutasa-logs

---
apiVersion: v1
kind: Service
metadata:
  name: merajutasa-dashboards
  labels:
    app: merajutasa-dashboards
    app.kubernetes.io/name: merajutasa-dashboards
    app.kubernetes.io/part-of: merajutasa
    app.kubernetes.io/component: real-time-dashboards
    component: real-time-dashboards
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8085"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
  - port: 8085
    targetPort: 8085
    protocol: TCP
    name: http
  selector:
    app: merajutasa-dashboards

# API Gateway Services (Week 4)
---
apiVersion: v1
kind: Service
metadata:
  name: merajutasa-api-gateway
  labels:
    app: merajutasa-api-gateway
    app.kubernetes.io/name: merajutasa-api-gateway
    app.kubernetes.io/part-of: merajutasa
    app.kubernetes.io/component: api-gateway
    component: api-gateway
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8086"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
  - port: 8086
    targetPort: 8086
    protocol: TCP
    name: http
  selector:
    app: merajutasa-api-gateway

---
apiVersion: v1
kind: Service
metadata:
  name: merajutasa-service-mesh
  labels:
    app: merajutasa-service-mesh
    app.kubernetes.io/name: merajutasa-service-mesh
    app.kubernetes.io/part-of: merajutasa
    app.kubernetes.io/component: service-mesh
    component: service-mesh
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8087"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
  - port: 8087
    targetPort: 8087
    protocol: TCP
    name: http
  selector:
    app: merajutasa-service-mesh

# High Availability Services (Week 5)
---
apiVersion: v1
kind: Service
metadata:
  name: merajutasa-ha-orchestrator
  labels:
    app: merajutasa-ha-orchestrator
    app.kubernetes.io/name: merajutasa-ha-orchestrator
    app.kubernetes.io/part-of: merajutasa
    app.kubernetes.io/component: ha-orchestrator
    component: ha-orchestrator
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8090"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
  - port: 8090
    targetPort: 8090
    protocol: TCP
    name: http
  selector:
    app: merajutasa-ha-orchestrator

# Compliance & Security Services (Week 6)
---
apiVersion: v1
kind: Service
metadata:
  name: merajutasa-compliance-orchestrator
  labels:
    app: merajutasa-compliance-orchestrator
    app.kubernetes.io/name: merajutasa-compliance-orchestrator
    app.kubernetes.io/part-of: merajutasa
    app.kubernetes.io/component: compliance-orchestrator
    component: compliance-orchestrator
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9000"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
  - port: 9000
    targetPort: 9000
    protocol: TCP
    name: http
  selector:
    app: merajutasa-compliance-orchestrator

---
apiVersion: v1
kind: Service
metadata:
  name: merajutasa-audit-system
  labels:
    app: merajutasa-audit-system
    app.kubernetes.io/name: merajutasa-audit-system
    app.kubernetes.io/part-of: merajutasa
    app.kubernetes.io/component: audit-system
    component: audit-system
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9001"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
  - port: 9001
    targetPort: 9001
    protocol: TCP
    name: http
  selector:
    app: merajutasa-audit-system

---
apiVersion: v1
kind: Service
metadata:
  name: merajutasa-compliance-automation
  labels:
    app: merajutasa-compliance-automation
    app.kubernetes.io/name: merajutasa-compliance-automation
    app.kubernetes.io/part-of: merajutasa
    app.kubernetes.io/component: compliance-automation
    component: compliance-automation
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9002"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
  - port: 9002
    targetPort: 9002
    protocol: TCP
    name: http
  selector:
    app: merajutasa-compliance-automation

---
apiVersion: v1
kind: Service
metadata:
  name: merajutasa-privacy-rights
  labels:
    app: merajutasa-privacy-rights
    app.kubernetes.io/name: merajutasa-privacy-rights
    app.kubernetes.io/part-of: merajutasa
    app.kubernetes.io/component: privacy-rights
    component: privacy-rights
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9003"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
  - port: 9003
    targetPort: 9003
    protocol: TCP
    name: http
  selector:
    app: merajutasa-privacy-rights

---
apiVersion: v1
kind: Service
metadata:
  name: merajutasa-security-hardening
  labels:
    app: merajutasa-security-hardening
    app.kubernetes.io/name: merajutasa-security-hardening
    app.kubernetes.io/part-of: merajutasa
    app.kubernetes.io/component: security-hardening
    component: security-hardening
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9004"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
  - port: 9004
    targetPort: 9004
    protocol: TCP
    name: http
  selector:
    app: merajutasa-security-hardening

# Infrastructure Services
---
apiVersion: v1
kind: Service
metadata:
  name: merajutasa-monitoring
  labels:
    app: merajutasa-monitoring
    app.kubernetes.io/name: merajutasa-monitoring
    app.kubernetes.io/part-of: merajutasa
    app.kubernetes.io/component: monitoring-service
    component: monitoring-service
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "4604"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
  - port: 4604
    targetPort: 4604
    protocol: TCP
    name: http
  selector:
    app: merajutasa-monitoring

---
apiVersion: v1
kind: Service
metadata:
  name: merajutasa-backup
  labels:
    app: merajutasa-backup
    app.kubernetes.io/name: merajutasa-backup
    app.kubernetes.io/part-of: merajutasa
    app.kubernetes.io/component: backup-service
    component: backup-service
spec:
  type: ClusterIP
  ports:
  - port: 4605
    targetPort: 4605
    protocol: TCP
    name: http
  selector:
    app: merajutasa-backup

# Headless service for StatefulSet (Chain)
---
apiVersion: v1
kind: Service
metadata:
  name: merajutasa-chain-headless
  labels:
    app: merajutasa-chain
    app.kubernetes.io/name: merajutasa-chain
    app.kubernetes.io/part-of: merajutasa
    app.kubernetes.io/component: chain-service
    component: chain-service
spec:
  type: ClusterIP
  clusterIP: None
  ports:
  - port: 4602
    targetPort: 4602
    protocol: TCP
    name: http
  selector:
    app: merajutasa-chain

# External LoadBalancer service for public access
---
apiVersion: v1
kind: Service
metadata:
  name: merajutasa-public
  labels:
    app: merajutasa-public
    app.kubernetes.io/name: merajutasa-public
    app.kubernetes.io/part-of: merajutasa
    app.kubernetes.io/component: public-access
    component: public-access
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: "arn:aws:acm:region:account:certificate/cert-id"
    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "https"
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
    name: http
  - port: 443
    targetPort: 443
    protocol: TCP
    name: https
  selector:
    app: nginx-proxy
  loadBalancerSourceRanges:
  - 0.0.0.0/0