# MerajutASA.id Development Environment
# Docker Compose configuration for local development

version: '3.8'

services:
  # Core Services
  signer:
    build:
      context: ../..
      dockerfile: infrastructure/docker/services/Dockerfile.signer
    container_name: merajutasa-signer-dev
    ports:
      - "4601:4601"
    environment:
      - NODE_ENV=development
      - SIGNER_PORT=4601
      - SIGNER_HOST=0.0.0.0
      - DEBUG=merajutasa:*
    volumes:
      - ../../:/app:ro
      - node_modules:/app/node_modules
    networks:
      - merajutasa-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4601/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s

  chain:
    build:
      context: ../..
      dockerfile: infrastructure/docker/services/Dockerfile.chain
    container_name: merajutasa-chain-dev
    ports:
      - "4602:4602"
    environment:
      - NODE_ENV=development
      - CHAIN_PORT=4602
      - CHAIN_HOST=0.0.0.0
      - CHAIN_DATA_DIR=/app/artifacts
      - DEBUG=merajutasa:*
    volumes:
      - ../../:/app:ro
      - node_modules:/app/node_modules
      - chain_data:/app/artifacts
    networks:
      - merajutasa-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4602/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s

  collector:
    build:
      context: ../..
      dockerfile: infrastructure/docker/services/Dockerfile.collector
    container_name: merajutasa-collector-dev
    ports:
      - "4603:4603"
    environment:
      - NODE_ENV=development
      - COLLECTOR_PORT=4603
      - COLLECTOR_HOST=0.0.0.0
      - EVENTS_DATA_DIR=/app/data
      - DEBUG=merajutasa:*
    volumes:
      - ../../:/app:ro
      - node_modules:/app/node_modules
      - collector_data:/app/data
      - ../../schemas:/app/schemas:ro
    networks:
      - merajutasa-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4603/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s

  monitoring:
    build:
      context: ../..
      dockerfile: infrastructure/docker/services/Dockerfile.monitoring
    container_name: merajutasa-monitoring-dev
    ports:
      - "4604:4604"
    environment:
      - NODE_ENV=development
      - MONITORING_PORT=4604
      - MONITORING_HOST=0.0.0.0
      - METRICS_DIR=/app/metrics
      - LOGS_DIR=/app/logs
      - DEBUG=merajutasa:*
    volumes:
      - ../../:/app:ro
      - node_modules:/app/node_modules
      - monitoring_metrics:/app/metrics
      - monitoring_logs:/app/logs
    networks:
      - merajutasa-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4604/metrics"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s

  backup:
    build:
      context: ../..
      dockerfile: infrastructure/docker/services/Dockerfile.backup
    container_name: merajutasa-backup-dev
    environment:
      - NODE_ENV=development
      - BACKUP_PORT=4605
      - BACKUP_HOST=0.0.0.0
      - BACKUP_DIR=/app/backups
      - BACKUP_TEMP_DIR=/app/temp
      - DEBUG=merajutasa:*
    volumes:
      - ../../:/app:ro
      - node_modules:/app/node_modules
      - backup_storage:/app/backups
      - backup_temp:/app/temp
      - chain_data:/app/artifacts:ro  # Access to chain data for backup
    networks:
      - merajutasa-network
    restart: unless-stopped
    depends_on:
      - chain
      - signer
      - collector

  # Infrastructure Services
  reverse-proxy:
    image: nginx:alpine
    container_name: merajutasa-nginx-dev
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ../configs/nginx-docker.conf:/etc/nginx/nginx.conf:ro
      - ../../infrastructure/reverse-proxy/certs:/etc/nginx/certs:ro
    networks:
      - merajutasa-network
    restart: unless-stopped
    depends_on:
      - signer
      - chain
      - collector
      - monitoring

# Networks
networks:
  merajutasa-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# Volumes
volumes:
  node_modules:
    driver: local
  chain_data:
    driver: local
  collector_data:
    driver: local
  monitoring_metrics:
    driver: local
  monitoring_logs:
    driver: local
  backup_storage:
    driver: local
  backup_temp:
    driver: local